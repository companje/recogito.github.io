<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>recogito.github.io</title>
    <link>http://recogito.github.io/</link>
    <description>Recent content on recogito.github.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jun 2020 20:04:18 +0200</lastBuildDate>
    
	<atom:link href="http://recogito.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Annotorious</title>
      <link>http://recogito.github.io/site/annotorious/getting-started/annotorious/</link>
      <pubDate>Mon, 01 Jun 2020 10:20:00 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/annotorious/getting-started/annotorious/</guid>
      <description></description>
    </item>
    
    <item>
      <title>OpenSeadragon Plugin</title>
      <link>http://recogito.github.io/site/annotorious/getting-started/osd-plugin/</link>
      <pubDate>Mon, 01 Jun 2020 10:20:00 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/annotorious/getting-started/osd-plugin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Web Annotation Model</title>
      <link>http://recogito.github.io/site/annotorious/getting-started/web-annotation/</link>
      <pubDate>Sun, 17 May 2020 14:33:09 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/annotorious/getting-started/web-annotation/</guid>
      <description>The W3C Web Annotation Model Annotorious uses the W3C Web Annotation model. Only a limited range of the specification is supported at the moment.
 Only annotations with a single rectangle selection selector must be a FragmentSelector, according to the W3C Media Fragments URI format Only xywh scheme with pixel coordinates id should be provided, but can be any alphanumeric string When creating new annotations, Annotorious will automatically generate globally unique IDs in the form #{uuid}  { &amp;#34;@context&amp;#34;: &amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Storing Annotations</title>
      <link>http://recogito.github.io/site/annotorious/getting-started/storing-annotations/</link>
      <pubDate>Mon, 01 Jun 2020 10:20:00 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/annotorious/getting-started/storing-annotations/</guid>
      <description>Storing Annotations To store annotations, you need an annotation server or database backend. Annotorious - as well as its sister project RecogitoJS - do not include their own storage solution. They provide the user interface functionality for annotation only. To store annotations, you need to connect them to your own backend, using the API.
When an annotation is created, updated or deleted by the user, Annotorious emits the following events through the API:</description>
    </item>
    
    <item>
      <title>Contributing UI Translations</title>
      <link>http://recogito.github.io/site/guides/contributing-ui-translations/</link>
      <pubDate>Mon, 01 Jun 2020 20:04:18 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/guides/contributing-ui-translations/</guid>
      <description>We want to make Annotorious available in as many languages as possible. If you want to help: providing a translation is easy - and because Annotorious doesn&amp;rsquo;t have many labeled user interface elements, it&amp;rsquo;s also not a lot of work.
How to add a new translation The user interface labels are part of the recogito-client-core package, located here. In this folder you will find messages files, one for each available translation.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://recogito.github.io/site/annotorious/about/</link>
      <pubDate>Mon, 01 Jun 2020 17:48:46 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/annotorious/about/</guid>
      <description>About </description>
    </item>
    
    <item>
      <title>Using Firebase for Storage</title>
      <link>http://recogito.github.io/site/guides/using-firebase-for-storage/</link>
      <pubDate>Fri, 01 May 2020 13:28:54 +0200</pubDate>
      
      <guid>http://recogito.github.io/site/guides/using-firebase-for-storage/</guid>
      <description>Using Firebase for Storage A quick and easy way to set up your own annotation store without managing your own server is through Firebase, a web application development platform by Google.
Firebase includes a cloud-based document database with a JavaScript SDK for storing, updating and deleting JSON records. All you need to do is wire up the Firebase storage SDK operations with the corresponding events from Annotorious.
E.g. when Annotorious fires the createAnnotation event, store the annotation via the .</description>
    </item>
    
  </channel>
</rss>